{"input":{"ourVersion":"1.32.3","commit":"a3db5be9b5c6ba46bb7555ec5d60178ecc2eaae4","locale":"en-gb","devMode":false,"absoluteFolderPath":"/home/ninja/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1553258011227},"result":[{"name":"code-gnu-global","displayName":"C++ Intellisense","description":"C/C++ Intellisense with the help of GNU Global tags","icon":"logo.svg","version":"0.2.2","publisher":"austin","engines":{"vscode":"^0.10.1"},"categories":["Other","Languages"],"activationEvents":["onLanguage:cpp","onLanguage:c"],"configuration":{"type":"object","title":"C++ Intellisense configuration","properties":{"codegnuglobal.encoding":{"type":"string","default":"","description":"Specify the encoding of the command line output. (Normally it is the code page of Windows non-unicode program if it is not CP437)"},"codegnuglobal.executable":{"type":"string","default":"global","description":"Specify the path to the global executable. (If it is not in PATH already)"},"codegnuglobal.autoupdate":{"type":"boolean","default":true,"description":"Specify if global should automatically update the tags on file save. (You should turn it off in the workspace settings for large projects)"}}},"main":"/home/ninja/.vscode/extensions/austin.code-gnu-global-0.2.2/out/src/extension","contributes":{},"scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./"},"devDependencies":{"typescript":"^1.6.2","vscode":"0.10.x"},"dependencies":{"child-process-promise":"^1.1.0","iconv-lite":"^0.4.13"},"repository":{"type":"git","url":"https://github.com/austin-----/code-gnu-global"},"uuid":"de611071-4d05-4903-821c-6878df63d4af","isBuiltin":false,"isUnderDevelopment":false,"id":"austin.code-gnu-global","identifier":{"value":"austin.code-gnu-global","_lower":"austin.code-gnu-global"},"extensionLocation":{"$mid":1,"fsPath":"/home/ninja/.vscode/extensions/austin.code-gnu-global-0.2.2","path":"/home/ninja/.vscode/extensions/austin.code-gnu-global-0.2.2","scheme":"file"}},{"name":"code-runner","displayName":"Code Runner","description":"Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp","version":"0.9.7","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.17.0"},"categories":["Programming Languages","Other"],"keywords":["javascript","php","python","perl","ruby","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-code-runner/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-code-runner/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-code-runner.git"},"activationEvents":["onCommand:code-runner.run","onCommand:code-runner.runCustomCommand","onCommand:code-runner.runByLanguage"],"main":"/home/ninja/.vscode/extensions/formulahendry.code-runner-0.9.7/out/src/extension","contributes":{"commands":[{"command":"code-runner.run","title":"Run Code","icon":{"light":"./images/run-light.png","dark":"./images/run-dark.png"}},{"command":"code-runner.runCustomCommand","title":"Run Custom Command"},{"command":"code-runner.runByLanguage","title":"Run By Language"},{"command":"code-runner.stop","title":"Stop Code Run"}],"keybindings":[{"command":"code-runner.run","key":"ctrl+alt+n"},{"command":"code-runner.runCustomCommand","key":"ctrl+alt+k"},{"command":"code-runner.runByLanguage","key":"ctrl+alt+j"},{"command":"code-runner.stop","key":"ctrl+alt+m"}],"menus":{"editor/context":[{"when":"!inOutput && config.code-runner.showRunCommandInEditorContextMenu","command":"code-runner.run","group":"navigation"},{"when":"inOutput","command":"code-runner.stop","group":"stop-code-run"}],"editor/title":[{"when":"config.code-runner.showRunIconInEditorTitleMenu","command":"code-runner.run","group":"navigation"}],"explorer/context":[{"when":"!explorerResourceIsFolder","command":"code-runner.run","group":"navigation"}]},"configuration":{"type":"object","title":"Run Code configuration","properties":{"code-runner.executorMapByGlob":{"type":"object","default":{"pom.xml":"cd $dir && mvn clean package"},"description":"Set the executor by glob.","scope":"resource"},"code-runner.executorMap":{"type":"object","default":{"javascript":"node","java":"cd $dir && javac $fileName && java $fileNameWithoutExt","c":"cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","cpp":"cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","objective-c":"cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","php":"php","python":"python -u","perl":"perl","perl6":"perl6","ruby":"ruby","go":"go run","lua":"lua","groovy":"groovy","powershell":"powershell -ExecutionPolicy ByPass -File","bat":"cmd /c","shellscript":"bash","fsharp":"fsi","csharp":"scriptcs","vbscript":"cscript //Nologo","typescript":"ts-node","coffeescript":"coffee","scala":"scala","swift":"swift","julia":"julia","crystal":"crystal","ocaml":"ocaml","r":"Rscript","applescript":"osascript","clojure":"lein exec","haxe":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt","rust":"cd $dir && rustc $fileName && $dir$fileNameWithoutExt","racket":"racket","ahk":"autohotkey","autoit":"autoit3","dart":"dart","pascal":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt","d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt","haskell":"runhaskell","nim":"nim compile --verbosity:0 --hints:off --run","lisp":"sbcl --script"},"description":"Set the executor of each language.","scope":"resource"},"code-runner.executorMapByFileExtension":{"type":"object","default":{".vb":"cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",".vbs":"cscript //Nologo",".scala":"scala",".jl":"julia",".cr":"crystal",".ml":"ocaml",".exs":"elixir",".hx":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",".rkt":"racket",".ahk":"autohotkey",".au3":"autoit3",".kt":"cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",".kts":"kotlinc -script",".dart":"dart",".pas":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".pp":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt",".hs":"runhaskell",".nim":"nim compile --verbosity:0 --hints:off --run",".csproj":"dotnet run --project",".fsproj":"dotnet run --project",".lisp":"sbcl --script"},"description":"Set the executor of each file extension.","scope":"resource"},"code-runner.customCommand":{"type":"string","default":"echo Hello","description":"Set the custom command to run.","scope":"resource"},"code-runner.languageIdToFileExtensionMap":{"type":"object","default":{"bat":".bat","powershell":".ps1","typescript":".ts"},"description":"Set the mapping of languageId to file extension.","scope":"resource"},"code-runner.defaultLanguage":{"type":"string","default":"","description":"Set the default language to run.","scope":"resource"},"code-runner.cwd":{"type":"string","default":"","description":"Set the working directory.","scope":"resource"},"code-runner.fileDirectoryAsCwd":{"type":"boolean","default":false,"description":"Whether to use the directory of the file to be executed as the working directory.","scope":"resource"},"code-runner.clearPreviousOutput":{"type":"boolean","default":false,"description":"Whether to clear previous output before each run.","scope":"resource"},"code-runner.saveAllFilesBeforeRun":{"type":"boolean","default":false,"description":"Whether to save all files before running.","scope":"resource"},"code-runner.saveFileBeforeRun":{"type":"boolean","default":false,"description":"Whether to save the current file before running.","scope":"resource"},"code-runner.enableAppInsights":{"type":"boolean","default":true,"description":"Whether to enable AppInsights to track user telemetry data.","scope":"resource"},"code-runner.showExecutionMessage":{"type":"boolean","default":true,"description":"Whether to show extra execution message like [Running] ... and [Done] ...","scope":"resource"},"code-runner.runInTerminal":{"type":"boolean","default":false,"description":"Whether to run code in Integrated Terminal.","scope":"resource"},"code-runner.terminalRoot":{"type":"string","default":"","description":"For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\\path' with '/mnt/c/path'","scope":"resource"},"code-runner.preserveFocus":{"type":"boolean","default":true,"description":"Whether to preserve focus on code editor after code run is triggered.","scope":"resource"},"code-runner.ignoreSelection":{"type":"boolean","default":false,"description":"Whether to ignore selection to always run entire file.","scope":"resource"},"code-runner.showRunIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' icon in editor title menu.","scope":"resource"},"code-runner.showRunCommandInEditorContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in editor context menu.","scope":"resource"},"code-runner.temporaryFileName":{"type":"string","default":"tempCodeRunnerFile","description":"Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.","scope":"resource"},"code-runner.respectShebang":{"type":"boolean","default":true,"description":"Whether to respect Shebang to run code.","scope":"resource"}}},"languages":[{"id":"code-runner-output","mimetypes":["text/x-code-output"]}],"grammars":[{"language":"code-runner-output","scopeName":"code-runner.output","path":"./syntaxes/code-runner-output.tmLanguage"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","tslint":"tslint -t verbose src/**/*.ts"},"dependencies":{"applicationinsights":"^0.19.0","micromatch":"^3.1.10","tree-kill":"^1.1.0"},"devDependencies":{"@types/micromatch":"^3.1.0","@types/mocha":"^2.2.32","@types/node":"^6.0.40","mocha":"^2.3.3","tslint":"^5.5.0","typescript":"^2.0.3","vscode":"^1.0.0"},"uuid":"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3","isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.code-runner","identifier":{"value":"formulahendry.code-runner","_lower":"formulahendry.code-runner"},"extensionLocation":{"$mid":1,"fsPath":"/home/ninja/.vscode/extensions/formulahendry.code-runner-0.9.7","path":"/home/ninja/.vscode/extensions/formulahendry.code-runner-0.9.7","scheme":"file"}},{"name":"better-cpp-syntax","displayName":"Better C++ Syntax","description":"The standard C++ syntax has issues, this extension remedies them","icon":"icon.png","version":"1.6.5","engines":{"vscode":"^1.0.0"},"author":{"name":"Jeff Hykin"},"publisher":"jeff-hykin","contributes":{"grammars":[{"language":"cpp","scopeName":"source.cpp","path":"./syntaxes/cpp.tmLanguage.json"},{"language":"c","scopeName":"source.c","path":"./syntaxes/c.tmLanguage.json"}]},"categories":["Programming Languages"],"repository":{"url":"https://github.com/jeff-hykin/cpp-textmate-grammer","type":"git"},"uuid":"73767f91-7dcb-43cb-90b3-596d073eea1f","isBuiltin":false,"isUnderDevelopment":false,"id":"jeff-hykin.better-cpp-syntax","identifier":{"value":"jeff-hykin.better-cpp-syntax","_lower":"jeff-hykin.better-cpp-syntax"},"extensionLocation":{"$mid":1,"fsPath":"/home/ninja/.vscode/extensions/jeff-hykin.better-cpp-syntax-1.6.5","path":"/home/ninja/.vscode/extensions/jeff-hykin.better-cpp-syntax-1.6.5","scheme":"file"}},{"name":"vscode-language-babel","displayName":"Babel JavaScript","description":"VSCode syntax highlighting for today's JavaScript, ported from gandm's language-babel for Atom.","version":"0.0.22","publisher":"mgmcdermott","main":"/home/ninja/.vscode/extensions/mgmcdermott.vscode-language-babel-0.0.22/dist/extension","engines":{"vscode":"1.x.x"},"categories":["Programming Languages"],"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:jsx","onLanguage:jsx-attr","onLanguage:styled-css","onCommand:javascript.reloadProjects"],"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","prettier:stdin":"prettier --single-quote --print-width 100 --trailing-comma all --write","prettier":"npm run prettier:stdin -- '**/*.ts' '**/*.json'","test":"jest"},"repository":{"type":"git","url":"https://github.com/mgmcdermott/vscode-language-babel/"},"bugs":"https://github.com/mgmcdermott/vscode-language-babel/issues","links":{"getstarted":{"uri":"https://github.com/mgmcdermott/vscode-language-babel/blob/master/README.md"},"support":{"uri":"https://github.com/mgmcdermott/vscode-language-babel/issues"}},"icon":"images/babel-logo.png","galleryBanner":{"color":"#323330","theme":"dark"},"contributes":{"languages":[{"id":"javascriptreact","aliases":["JavaScript React","jsx"],"extensions":[".jsx",".js"],"configuration":"./javascript.language-configuration.json"},{"id":"javascript","aliases":["Babel JavaScript"],"extensions":[".js",".es6",".babel",".jsx",".flow"],"firstLine":"^#!.*\\bnode","mimetypes":["text/javascript"],"configuration":"./javascript.language-configuration.json"},{"id":"jsx","configuration":"./jsx.language-configuration.json"},{"id":"jsx-attr","aliases":["jsx-tags"],"configuration":"./jsx-attr.language-configuration.json"},{"id":"styled-css","configuration":"./styled-css.language-configuration.json"}],"grammars":[{"language":"javascriptreact","scopeName":"source.js","path":"./grammars/Babel-Language.json","embeddedLanguages":{"meta.tag.jsx":"jsx","meta.jsx.tag.termination":"jsx","JSXNested":"jsx","JSXAttrs":"jsx-attr","source.inside-js.css.styled":"styled-css"}},{"language":"javascript","scopeName":"source.js","path":"./grammars/Babel-Language.json","embeddedLanguages":{"meta.tag.jsx":"jsx","meta.jsx.tag.termination":"jsx","JSXNested":"jsx","JSXAttrs":"jsx-attr","source.inside-js.css.styled":"styled-css"}},{"scopeName":"source.regexp.babel","path":"./grammars/Babel-Regex.json"},{"scopeName":"source.css.styled","path":"./grammars/css.json"}],"jsonValidation":[{"fileMatch":"package.json","url":"http://json.schemastore.org/package"},{"fileMatch":"bower.json","url":"http://json.schemastore.org/bower"},{"fileMatch":".bowerrc","url":"http://json.schemastore.org/bowerrc"},{"fileMatch":".babelrc","url":"http://json.schemastore.org/babelrc"},{"fileMatch":"jsconfig.json","url":"http://json.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.json","url":"./schemas/jsconfig.schema.json"},{"fileMatch":"jsconfig.*.json","url":"http://json.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.*.json","url":"./schemas/jsconfig.schema.json"}]},"lint-staged":{"*.{ts,tsx,css,md}":["npm run prettier:stdin --","git add"]},"dependencies":{"vscode":"^1.1.29"},"devDependencies":{"husky":"^1.3.1","lint-staged":"^8.1.4","prettier":"^1.16.4","typescript":"^3.3.3"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"uuid":"dd5a2c83-ad8c-4839-a529-0644e5acb646","isBuiltin":false,"isUnderDevelopment":false,"id":"mgmcdermott.vscode-language-babel","identifier":{"value":"mgmcdermott.vscode-language-babel","_lower":"mgmcdermott.vscode-language-babel"},"extensionLocation":{"$mid":1,"fsPath":"/home/ninja/.vscode/extensions/mgmcdermott.vscode-language-babel-0.0.22","path":"/home/ninja/.vscode/extensions/mgmcdermott.vscode-language-babel-0.0.22","scheme":"file"}},{"name":"vscode-clang","displayName":"C/C++ Clang Command Adapter","description":"Completion and Diagnostic for C/C++/Objective-C using Clang Command","version":"0.2.3","publisher":"mitaki28","license":"MIT","repository":{"type":"git","url":"https://github.com/mitaki28/vscode-clang"},"bugs":{"url":"https://github.com/mitaki28/vscode-clang/issues"},"homepage":"https://github.com/mitaki28/vscode-clang","engines":{"vscode":"^1.5.0"},"categories":["Programming Languages","Linters","Other"],"activationEvents":["onLanguage:cpp","onLanguage:c","onLanguage:objective-c","onCommand:clang.showExecConf"],"main":"/home/ninja/.vscode/extensions/mitaki28.vscode-clang-0.2.3/out/src/extension","contributes":{"commands":[{"command":"clang.showExecConf","title":"Show Executable and Compile Options","category":"ClangCommandAdapter"}],"configuration":{"type":"object","title":"Clang command adapter configulation","properties":{"clang.executable":{"type":"string","default":"clang","description":"Clang command or the path to the Clang executable"},"clang.cflags":{"type":"array","items":{"type":"string"},"default":[],"description":"Compiler options for C (e.g. [\"-std=c99\"])"},"clang.cxxflags":{"type":"array","items":{"type":"string"},"default":[],"description":"Compiler options for C++ (e.g. [\"-std=c++11\"])"},"clang.objcflags":{"type":"array","items":{"type":"string"},"default":[],"description":"Compiler options for Objective-C"},"clang.diagnostic.enable":{"type":"boolean","default":true,"description":"Enable diagnostic"},"clang.diagnostic.delay":{"type":"number","default":500,"description":"The delay after which diagnostic starts (in millisecond)"},"clang.diagnostic.maxBuffer":{"type":"number","default":262144,"description":"Tolerable size of the clang output for diagnostic"},"clang.completion.enable":{"type":"boolean","default":true,"description":"Enable completion"},"clang.completion.maxBuffer":{"type":"number","default":8388608,"description":"Tolerable size of the clang output for completion"},"clang.completion.triggerChars":{"type":"array","default":[".",":",">"],"description":"Trigger completion when the user types one of the characters"},"clang.completion.completeMacros":{"type":"boolean","default":true,"description":"Complete macros"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","mocha":"^2.3.3","tslint":"^3.15.1","typescript":"^2.0.3","vscode":"^1.0.0"},"uuid":"f8dbe169-d649-4e4b-adb8-ffa113c1d616","isBuiltin":false,"isUnderDevelopment":false,"id":"mitaki28.vscode-clang","identifier":{"value":"mitaki28.vscode-clang","_lower":"mitaki28.vscode-clang"},"extensionLocation":{"$mid":1,"fsPath":"/home/ninja/.vscode/extensions/mitaki28.vscode-clang-0.2.3","path":"/home/ninja/.vscode/extensions/mitaki28.vscode-clang-0.2.3","scheme":"file"}},{"name":"python","displayName":"Python","description":"Linting, Debugging (multi-threaded, remote), Intellisense, code formatting, refactoring, unit tests, snippets, and more.","version":"2019.2.5558","languageServerVersion":"0.1.80","publisher":"ms-python","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+python","badges":[{"url":"https://vscode-python.visualstudio.com/VSCode-Python/_apis/build/status/VSCode-Python-Rolling-CI?branchName=master","href":"https://vscode-python.visualstudio.com/VSCode-Python/VSCode-Python%20Team/_build/index?context=allDefinitions&path=&definitionId=9","description":"Continuous integration (VSTS)"},{"url":"https://travis-ci.org/Microsoft/vscode-python.svg?branch=master","href":"https://travis-ci.org/Microsoft/vscode-python","description":"Continuous integration (Travis)"},{"url":"https://codecov.io/gh/Microsoft/vscode-python/branch/master/graph/badge.svg","href":"https://codecov.io/gh/Microsoft/vscode-python","description":"Test coverage"}],"icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.31.0"},"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Snippets","Formatters","Other"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onDebugResolve:python","onCommand:python.execInTerminal","onCommand:python.sortImports","onCommand:python.runtests","onCommand:python.debugtests","onCommand:python.setInterpreter","onCommand:python.setShebangInterpreter","onCommand:python.viewTestUI","onCommand:python.viewTestOutput","onCommand:python.viewOutput","onCommand:python.selectAndRunTestMethod","onCommand:python.selectAndDebugTestMethod","onCommand:python.selectAndRunTestFile","onCommand:python.runCurrentTestFile","onCommand:python.runFailedTests","onCommand:python.execSelectionInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.buildWorkspaceSymbols","onCommand:python.updateSparkLibrary","onCommand:python.startREPL","onCommand:python.goToPythonObject","onCommand:python.setLinter","onCommand:python.enableLinting","onCommand:python.createTerminal","onCommand:python.discoverTests","onCommand:python.configureTests","onCommand:python.datascience.showhistorypane","onCommand:python.datascience.importnotebook","onCommand:python.datascience.selectjupyteruri","onCommand:python.datascience.exportfileasnotebook","onCommand:python.datascience.exportfileandoutputasnotebook","onCommand:python.python.enableSourceMapSupport"],"main":"/home/ninja/.vscode/extensions/ms-python.python-2019.2.5558/out/client/extension","contributes":{"snippets":[{"language":"python","path":"./snippets/python.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !python.datascience.ownsSelection"},{"command":"python.datascience.execSelectionInteractive","key":"shift+enter","when":"editorFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && python.datascience.ownsSelection && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcelladvance","key":"shift+enter","when":"editorFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled"}],"commands":[{"command":"python.enableSourceMapSupport","title":"Enable source map support for extension debugging","category":"Python"},{"command":"python.sortImports","title":"Sort Imports","category":"Python Refactor"},{"command":"python.startREPL","title":"Start REPL","category":"Python"},{"command":"python.createTerminal","title":"Create Terminal","category":"Python"},{"command":"python.buildWorkspaceSymbols","title":"Build Workspace Symbols","category":"Python"},{"command":"python.openTestNodeInEditor","title":"Open","icon":{"light":"resources/light/open-file.svg","dark":"resources/dark/open-file.svg"}},{"command":"python.runTestNode","title":"Run","icon":{"light":"resources/light/start.svg","dark":"resources/dark/start.svg"}},{"command":"python.debugTestNode","title":"Debug","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"python.runtests","title":"Run All Unit Tests","category":"Python","icon":{"light":"resources/light/run-tests.svg","dark":"resources/dark/run-tests.svg"}},{"command":"python.debugtests","title":"Debug All Unit Tests","category":"Python","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"python.execInTerminal","title":"Run Python File in Terminal","category":"Python"},{"command":"python.setInterpreter","title":"Select Interpreter","category":"Python"},{"command":"python.updateSparkLibrary","title":"Update Workspace PySpark Libraries","category":"Python"},{"command":"python.refactorExtractVariable","title":"Extract Variable","category":"Python Refactor"},{"command":"python.refactorExtractMethod","title":"Extract Method","category":"Python Refactor"},{"command":"python.viewTestOutput","title":"Show Unit Test Output","category":"Python","icon":{"light":"resources/light/repl.svg","dark":"resources/dark/repl.svg"}},{"command":"python.viewOutput","title":"Show Output","category":"Python","icon":{"light":"resources/light/repl.svg","dark":"resources/dark/repl.svg"}},{"command":"python.selectAndRunTestMethod","title":"Run Unit Test Method ...","category":"Python"},{"command":"python.selectAndDebugTestMethod","title":"Debug Unit Test Method ...","category":"Python"},{"command":"python.selectAndRunTestFile","title":"Run Unit Test File ...","category":"Python"},{"command":"python.runCurrentTestFile","title":"Run Current Unit Test File","category":"Python"},{"command":"python.runFailedTests","title":"Run Failed Unit Tests","category":"Python","icon":{"light":"resources/light/run-failed-tests.svg","dark":"resources/dark/run-failed-tests.svg"}},{"command":"python.discoverTests","title":"Discover Unit Tests","category":"Python","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"python.discoveringTests","title":"Discover Unit Tests","category":"Python","icon":{"light":"resources/light/discovering-tests.svg","dark":"resources/dark/discovering-tests.svg"}},{"command":"python.stopUnitTests","title":"Stop","category":"Python","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"python.configureTests","title":"Configure Unit Tests","category":"Python"},{"command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","category":"Python"},{"command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","category":"Python"},{"command":"python.goToPythonObject","title":"Go to Python Object","category":"Python"},{"command":"python.setLinter","title":"Select Linter","category":"Python"},{"command":"python.enableLinting","title":"Enable Linting","category":"Python"},{"command":"python.runLinting","title":"Run Linting","category":"Python"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python"},{"command":"python.datascience.execSelectionInteractive","title":"Run Selection/Line in Python Interactive window","category":"Python"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive window","category":"Python"},{"command":"python.datascience.runallcells","title":"Run Current File in Python Interactive window","category":"Python"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python"},{"command":"python.datascience.selectjupyteruri","title":"Specify Jupyter server URI","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive window as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python file as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python"},{"command":"python.datascience.undocells","title":"Undo last Python Interactive action","category":"Python"},{"command":"python.datascience.redocells","title":"Redo last Python Interactive action","category":"Python"},{"command":"python.datascience.removeallcells","title":"Delete all Python Interactive cells","category":"Python"},{"command":"python.datascience.interruptkernel","title":"Interrupt iPython Kernel","category":"Python"},{"command":"python.datascience.restartkernel","title":"Restart iPython Kernel","category":"Python"},{"command":"python.datascience.expandallcells","title":"Expand all Python Interactive cells","category":"Python"},{"command":"python.datascience.collapseallcells","title":"Collapse all Python Interactive cells","category":"Python"}],"menus":{"editor/context":[{"command":"python.refactorExtractVariable","title":"Refactor: Extract Variable","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.refactorExtractMethod","title":"Refactor: Extract Method","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.sortImports","title":"Refactor: Sort Imports","group":"Refactor","when":"editorLangId == python"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python","command":"python.runCurrentTestFile","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcell","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcelladvance","group":"Python"},{"command":"python.datascience.runallcells","group":"Python","when":"editorFocus && editorLangId == python &&  python.datascience.featureenabled && python.datascience.ownsSelection"},{"command":"python.datascience.execSelectionInteractive","group":"Python","when":"editorFocus && editorLangId == python &&  python.datascience.featureenabled && python.datascience.ownsSelection"},{"when":"editorFocus && editorLangId == python && resourceLangId == jupyter && python.datascience.featureenabled","command":"python.datascience.importnotebook","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.exportfileasnotebook","group":"Python2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.exportfileandoutputasnotebook","group":"Python2@2"}],"explorer/context":[{"when":"resourceLangId == python && !busyTests","command":"python.runtests","group":"Python"},{"when":"resourceLangId == python && !busyTests","command":"python.debugtests","group":"Python"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == jupyter","command":"python.datascience.importnotebook","group":"Python"}],"commandPalette":[{"command":"python.viewOutput","title":"Show Output","category":"Python"},{"command":"python.runTestNode","title":"Run","category":"Python","when":"config.noExists"},{"command":"python.discoveringTests","category":"Python","when":"config.noExists"},{"command":"python.stopUnitTests","category":"Python","when":"config.noExists"},{"command":"python.debugTestNode","title":"Debug","category":"Python","when":"config.noExists"},{"command":"python.openTestNodeInEditor","title":"Open","category":"Python","when":"config.noExists"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive window","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runallcells","title":"Run Current File in Python Interactive window","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python file as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.undocells","title":"Undo last Python Interactive action","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled"},{"command":"python.datascience.redocells","title":"Redo last Python Interactive action","category":"Python","when":"python.datascience.haveredoablecells && python.datascience.featureenabled"},{"command":"python.datascience.removeallcells","title":"Delete all Python Interactive cells","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled"},{"command":"python.datascience.interruptkernel","title":"Interrupt iPython Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.restartkernel","title":"Restart iPython Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.expandallcells","title":"Expand all Python Interactive cells","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.collapseallcells","title":"Collapse all Python Interactive cells","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive window as Jupyter Notebook","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"}],"view/title":[{"command":"python.debugtests","when":"view == python_tests && !busyTests","group":"navigation@3"},{"command":"python.runtests","when":"view == python_tests && !busyTests","group":"navigation@1"},{"command":"python.stopUnitTests","when":"view == python_tests && busyTests","group":"navigation@1"},{"command":"python.discoverTests","when":"view == python_tests && !busyTests","group":"navigation@4"},{"command":"python.discoveringTests","when":"view == python_tests && discoveringTests","group":"navigation@4"},{"command":"python.runFailedTests","when":"view == python_tests && hasFailedTests && !busyTests","group":"navigation@2"},{"command":"python.viewTestOutput","when":"view == python_tests","group":"navigation@5"}],"view/item/context":[{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == testFunction","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == testFunction && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == testFunction && !busyTests","group":"inline@0"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == testFile","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == testFile && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == testFile && !busyTests","group":"inline@0"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == testSuite","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == testSuite && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == testSuite && !busyTests","group":"inline@0"}]},"debuggers":[{"type":"python","label":"Python","languages":["python"],"enableBreakpointsFor":{"languageIds":["python","html","jinja"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","program":"./out/client/debugger/debugAdapter/main.js","runtime":"node","configurationSnippets":[{"label":"Python: Terminal (integrated)","description":"Debug a Python program with Integrated Terminal/Console","body":{"name":"Python: Terminal (integrated)","type":"python","request":"launch","program":"^\"\\${file}\"","console":"integratedTerminal"}},{"label":"Python: Terminal (external)","description":"Debug a Python program with External Terminal/Console","body":{"name":"Python: Terminal (external)","type":"python","request":"launch","program":"^\"\\${file}\"","console":"externalTerminal"}},{"label":"Python: Module","description":"Debug a Python Module","body":{"name":"Python: Module","type":"python","request":"launch","module":"enter-your-module-name-here","console":"integratedTerminal"}},{"label":"Python: Django","description":"Debug a Django Application","body":{"name":"Django","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/manage.py\"","args":["runserver","--noreload","--nothreading"],"django":true}},{"label":"Python: Flask","description":"Debug a Flask Application","body":{"name":"Flask","type":"python","request":"launch","module":"flask","env":{"FLASK_APP":"app.py","FLASK_ENV":"development","FLASK_DEBUG":"0"},"args":["run","--no-debugger","--no-reload"],"jinja":true}},{"label":"Python: Gevent","description":"Debug a Gevent Application","body":{"name":"Gevent","type":"python","request":"launch","program":"^\"\\${file}\"","gevent":true}},{"label":"Python: PySpark","description":"Debug PySpark","body":{"name":"PySpark","type":"python","request":"launch","osx":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"windows":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit.cmd\""},"linux":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"program":"^\"\\${file}\""}},{"label":"Python: Watson","description":"Debug a Watson Application","body":{"name":"Watson","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/console.py\"","args":["dev","runserver","--noreload=True"],"jinja":true}},{"label":"Python: Scrapy","description":"Scrapy with Integrated Terminal/Console","body":{"name":"Scrapy","type":"python","request":"launch","module":"scrapy","args":["crawl","specs","-o","bikes.json"]}},{"label":"Python: Pyramid","description":"Debug a Pyramid Application","body":{"name":"Pyramid","type":"python","request":"launch","args":["^\"\\${workspaceFolder}/development.ini\""],"pyramid":true,"jinja":true}},{"label":"Python: Remote Attach","description":"Attach the Debugger for Remote Debugging","body":{"name":"Attach (Remote Debug)","type":"python","request":"attach","port":5678,"host":"localhost","pathMappings":[{"localRoot":"${workspaceFolder}","remoteRoot":"."}]}},{"label":"Python: Unit Tests","description":"%python.snippet.launch.unitTests.description%","body":{"name":"Unit Tests","type":"python","request":"test"}}],"configurationAttributes":{"launch":{"properties":{"module":{"type":"string","description":"Name of the module to be debugged.","default":""},"program":{"type":"string","description":"Absolute path to the program.","default":"${file}"},"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings.json","default":"${config:python.pythonPath}"},"args":{"type":"array","description":"Command line arguments passed to the program","default":[],"items":{"type":"string"}},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":false},"console":{"enum":["none","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"integratedTerminal"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"port":{"type":"number","description":"Debug port (default is 0, resulting in the use of a dynamic port).","default":0},"host":{"type":"string","description":"IP address of the of the local debug server (default is localhost).","default":"localhost"},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false},"gevent":{"type":"boolean","description":"Enable debugging of gevent monkey-patched code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"sudo":{"type":"boolean","description":"Running debug program under elevated permissions (on Unix).","default":false},"pyramid":{"type":"boolean","description":"Whether debugging Pyramid applications","default":false},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}},"test":{"properties":{"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings.json","default":"${config:python.pythonPath}"},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":false},"console":{"enum":["none","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"none"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false}}},"attach":{"required":["port"],"properties":{"port":{"type":"number","description":"Debug port to attach","default":0},"host":{"type":"string","description":"IP Address of the of remote server (default is localhost or use 127.0.0.1).","default":"localhost"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}}}}],"configuration":{"type":"object","title":"Python","properties":{"python.diagnostics.sourceMapsEnabled":{"type":"boolean","default":false,"description":"Enable source map support for meaningful strack traces in error logs.","scope":"application"},"python.autoComplete.addBrackets":{"type":"boolean","default":false,"description":"Automatically add brackets for functions.","scope":"resource"},"python.autoComplete.extraPaths":{"type":"array","default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource"},"python.autoComplete.showAdvancedMembers":{"type":"boolean","default":true,"description":"Controls appearance of methods with double underscores in the completion list.","scope":"resource"},"python.autoComplete.typeshedPaths":{"type":"array","items":{"type":"string"},"default":[],"description":"Specifies paths to local typeshed repository clone(s) for the Python language server.","scope":"resource"},"python.autoUpdateLanguageServer":{"type":"boolean","default":true,"description":"Automatically update the language server.","scope":"application"},"python.dataScience.allowImportFromNotebook":{"type":"boolean","default":true,"description":"Allows a user to import a jupyter notebook into a python file anytime one is opened.","scope":"resource"},"python.dataScience.enabled":{"type":"boolean","default":true,"description":"Enable the experimental data science features in the python extension.","scope":"resource"},"python.dataScience.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"python.dataScience.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start.","scope":"resource"},"python.dataScience.jupyterServerURI":{"type":"string","default":"local","description":"Select the Jupyter server URI to connect to. Select 'local' to launch a new Juypter server on the local machine.","scope":"resource"},"python.dataScience.notebookFileRoot":{"type":"string","default":"${workspaceFolder}","description":"Set the root directory for loading files for the Python Interactive window.","scope":"resource"},"python.dataScience.searchForJupyter":{"type":"boolean","default":true,"description":"Search all installed Python interpreters for a Jupyter installation when starting the Python Interactive window","scope":"resource"},"python.dataScience.changeDirOnImportExport":{"type":"boolean","default":true,"description":"When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.","scope":"resource"},"python.dataScience.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config for the Python Interactive window","scope":"resource"},"python.dataScience.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.","scope":"resource"},"python.dataScience.allowInput":{"type":"boolean","default":true,"description":"Allow the inputting of python code directly into the Python Interactive window"},"python.dataScience.showCellInputCode":{"type":"boolean","default":true,"description":"Show cell input code.","scope":"resource"},"python.dataScience.collapseCellInputCodeByDefault":{"type":"boolean","default":true,"description":"Collapse cell input code by default.","scope":"resource"},"python.dataScience.maxOutputSize":{"type":"number","default":400,"description":"Maximum size (in pixels) of text output in the Python Interactive window before a scrollbar appears. Set to -1 for infinity.","scope":"resource"},"python.dataScience.sendSelectionToInteractiveWindow":{"type":"boolean","default":false,"description":"Determines if selected code in a python file will go to the terminal or the Python Interactive window when hitting shift+enter","scope":"resource"},"python.dataScience.codeRegularExpression":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell. \nDefaults to '^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])' if left blank","scope":"resource"},"python.dataScience.markdownRegularExpression":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown. \nDefaults to '^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)' if left blank","scope":"resource"},"python.dataScience.allowLiveShare":{"type":"boolean","default":false,"description":"Allow the Python Interactive window to be shared during a Live Share session (experimental)","scope":"resource"},"python.disableInstallationCheck":{"type":"boolean","default":false,"description":"Whether to check if Python is installed (also warn when using the macOS-installed Python).","scope":"resource"},"python.envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","scope":"resource"},"python.formatting.autopep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.autopep8Path":{"type":"string","default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"resource"},"python.formatting.provider":{"type":"string","default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.","enum":["autopep8","black","yapf","none"],"scope":"resource"},"python.formatting.blackArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.blackPath":{"type":"string","default":"black","description":"Path to Black, you can use a custom version of Black by modifying this setting to include the full path.","scope":"resource"},"python.formatting.yapfArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.yapfPath":{"type":"string","default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"resource"},"python.globalModuleInstallation":{"type":"boolean","default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource"},"python.jediEnabled":{"type":"boolean","default":true,"description":"Enables Jedi as IntelliSense engine instead of Microsoft Python Analysis Engine.","scope":"resource"},"python.jediMemoryLimit":{"type":"number","default":0,"description":"Memory limit for the Jedi completion engine in megabytes. Zero (default) means 1024 MB. -1 means unlimited (disable memory limit check)","scope":"resource"},"python.jediPath":{"type":"string","default":"","description":"Path to directory containing the Jedi library (this path will contain the 'Jedi' sub directory).","scope":"resource"},"python.analysis.openFilesOnly":{"type":"boolean","default":true,"description":"Only show errors and warnings for open files rather than for the entire workspace.","scope":"resource"},"python.analysis.diagnosticPublishDelay":{"type":"integer","default":1000,"description":"Delay before diagnostic messages are transferred to the problems list (in milliseconds).","scope":"resource"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.errors":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as errors.","scope":"resource"},"python.analysis.warnings":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as warnings.","scope":"resource"},"python.analysis.information":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as information.","scope":"resource"},"python.analysis.disabled":{"type":"array","default":[],"items":{"type":"string"},"description":"List of suppressed diagnostic messages.","scope":"resource"},"python.analysis.logLevel":{"type":"string","enum":["Error","Warning","Information","Trace"],"default":"Error","description":"Defines type of log messages language server writes into the output window.","scope":"resource"},"python.analysis.symbolsHierarchyDepthLimit":{"type":"integer","default":10,"description":"Limits depth of the symbol tree in the document outline.","scope":"resource"},"python.linting.enabled":{"type":"boolean","default":true,"description":"Whether to lint Python files.","scope":"resource"},"python.linting.flake8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.flake8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.F":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using flake8","scope":"resource"},"python.linting.flake8Path":{"type":"string","default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.ignorePatterns":{"type":"array","description":"Patterns used to exclude files or folders from being linted.","default":[".vscode/*.py","**/site-packages/**/*.py"],"items":{"type":"string"},"scope":"resource"},"python.linting.lintOnSave":{"type":"boolean","default":true,"description":"Whether to lint Python files when saved.","scope":"resource"},"python.linting.maxNumberOfProblems":{"type":"number","default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource"},"python.linting.banditArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.banditEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using bandit.","scope":"resource"},"python.linting.banditPath":{"type":"string","default":"bandit","description":"Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.","scope":"resource"},"python.linting.mypyArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["--ignore-missing-imports","--follow-imports=silent","--show-column-numbers"],"items":{"type":"string"},"scope":"resource"},"python.linting.mypyCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyCategorySeverity.note":{"type":"string","default":"Information","description":"Severity of Mypy message type 'Note'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using mypy.","scope":"resource"},"python.linting.mypyPath":{"type":"string","default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"resource"},"python.linting.pep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pep8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Pep8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Pep8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pep8","scope":"resource"},"python.linting.pep8Path":{"type":"string","default":"pep8","description":"Path to pep8, you can use a custom version of pep8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.prospectorArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.prospectorEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using prospector.","scope":"resource"},"python.linting.prospectorPath":{"type":"string","default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"resource"},"python.linting.pydocstyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pydocstyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pydocstyle","scope":"resource"},"python.linting.pydocstylePath":{"type":"string","default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylamaArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylamaEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pylama.","scope":"resource"},"python.linting.pylamaPath":{"type":"string","default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylintCategorySeverity.convention":{"type":"string","default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.fatal":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Fatal/F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.refactor":{"type":"string","default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.warning":{"type":"string","default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintEnabled":{"type":"boolean","default":true,"description":"Whether to lint Python files using pylint.","scope":"resource"},"python.linting.pylintPath":{"type":"string","default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintUseMinimalCheckers":{"type":"boolean","default":true,"description":"Whether to run Pylint with minimal set of rules.","scope":"resource"},"python.pythonPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"resource"},"python.condaPath":{"type":"string","default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"resource"},"python.pipenvPath":{"type":"string","default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"resource"},"python.sortImports.args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.sortImports.path":{"type":"string","description":"Path to isort script, default using inner version","default":"","scope":"resource"},"python.terminal.activateEnvironment":{"type":"boolean","default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource"},"python.terminal.executeInFileDir":{"type":"boolean","default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource"},"python.terminal.launchArgs":{"type":"array","default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource"},"python.unitTest.cwd":{"type":"string","default":null,"description":"Optional working directory for unit tests.","scope":"resource"},"python.unitTest.debugPort":{"type":"number","default":3000,"description":"Port number used for debugging of unittests.","scope":"resource"},"python.unitTest.nosetestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.unitTest.nosetestsEnabled":{"type":"boolean","default":false,"description":"Enable unit testing using nosetests.","scope":"resource"},"python.unitTest.nosetestPath":{"type":"string","default":"nosetests","description":"Path to nosetests, you can use a custom version of nosetests by modifying this setting to include the full path.","scope":"resource"},"python.unitTest.promptToConfigure":{"type":"boolean","default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource"},"python.unitTest.pyTestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.unitTest.pyTestEnabled":{"type":"boolean","default":false,"description":"Enable unit testing using pytest.","scope":"resource"},"python.unitTest.pyTestPath":{"type":"string","default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"resource"},"python.unitTest.unittestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["-v","-s",".","-p","*test*.py"],"items":{"type":"string"},"scope":"resource"},"python.unitTest.unittestEnabled":{"type":"boolean","default":false,"description":"Enable unit testing using unittest.","scope":"resource"},"python.unitTest.autoTestDiscoverOnSaveEnabled":{"type":"boolean","default":true,"description":"Enable auto run test discovery when saving a unit test file.","scope":"resource"},"python.venvFolders":{"type":"array","default":["envs",".pyenv",".direnv"],"description":"Folders in your home directory to look into for virtual environments.","scope":"resource","items":{"type":"string"}},"python.venvPath":{"type":"string","default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"resource"},"python.workspaceSymbols.ctagsPath":{"type":"string","default":"ctags","description":"Fully qualified path to the ctags executable (else leave as ctags, assuming it is in current path).","scope":"resource"},"python.workspaceSymbols.enabled":{"type":"boolean","default":true,"description":"Set to 'false' to disable Workspace Symbol provider using ctags.","scope":"resource"},"python.workspaceSymbols.exclusionPatterns":{"type":"array","default":["**/site-packages/**"],"items":{"type":"string"},"description":"Pattern used to exclude files and folders from ctags See http://ctags.sourceforge.net/ctags.html.","scope":"resource"},"python.workspaceSymbols.rebuildOnFileSave":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on when changes made to python files are saved.","scope":"resource"},"python.workspaceSymbols.rebuildOnStart":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on start (defaults to true).","scope":"resource"},"python.workspaceSymbols.tagFilePath":{"type":"string","default":"${workspaceFolder}/.vscode/tags","description":"Fully qualified path to tag file (exuberant ctag file), used to provide workspace symbols.","scope":"resource"}}},"languages":[{"id":"pip-requirements","aliases":["pip requirements","requirements.txt"],"filenames":["requirements.txt","constraints.txt","requirements.in"],"filenamePatterns":["*-requirements.txt","requirements-*.txt","constraints-*.txt","*-constraints.txt","*-requirements.in","requirements-*.in"],"configuration":"./languages/pip-requirements.json"},{"id":"yaml","filenames":[".condarc"]},{"id":"toml","filenames":["Pipfile"]},{"id":"json","filenames":["Pipfile.lock"]},{"id":"jinja","extensions":[".jinja2",".j2"],"aliases":["Jinja"]},{"id":"jupyter","extensions":[".ipynb"]}],"grammars":[{"language":"pip-requirements","scopeName":"source.pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"views":{"test":[{"id":"python_tests","name":"PYTHON","when":"testsDiscovered"}]}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package","compile":"tsc -watch -p ./","compile-webviews-watch":"npx webpack --config webpack.datascience-ui.config.js --watch","dump-datascience-webpack-stats":"webpack --config webpack.datascience-ui.config.js --profile --json > tmp/ds-stats.json","compile-webviews":"gulp compile-webviews","compile-webviews-verbose":"npx webpack --config webpack.datascience-ui.config.js","postinstall":"node ./node_modules/vscode/bin/install && node ./build/ci/postInstall.js","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --require source-map-support/register --opts ./build/.mocha.unittests.opts","test:unittests:cover":"nyc --nycrc-path ./build/.nycrc npm run test:unittests","test:functional":"mocha --require source-map-support/register --opts ./build/.mocha.functional.opts","test:functional:cover":"nyc --nycrc-path ./build/.nycrc npm run test:functional","testDebugger":"node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/standardTest.js","testMultiWorkspace":"node ./out/test/multiRootTest.js","testPerformance":"node ./out/test/performanceTest.js","testSmoke":"node ./out/test/smokeTest.js","lint-staged":"node gulpfile.js","lint":"tslint src/**/*.ts -t verbose","clean":"gulp clean","cover:enable":"gulp cover:enable","debugger-coverage":"gulp debugger-coverage","cover:inlinesource":"gulp inlinesource","updateBuildNumber":"gulp updateBuildNumber"},"dependencies":{"@jupyterlab/services":"^3.1.4","arch":"^2.1.0","azure-storage":"^2.10.1","diff-match-patch":"^1.0.0","file-matcher":"^1.3.0","fs-extra":"^4.0.3","fuzzy":"^0.1.3","get-port":"^3.2.0","glob":"^7.1.2","iconv-lite":"^0.4.21","inversify":"^4.11.1","line-by-line":"^0.1.6","lodash":"^4.17.11","md5":"^2.2.1","minimatch":"^3.0.4","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","pidusage":"^1.2.0","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","rxjs":"^5.5.9","semver":"^5.5.0","stack-trace":"0.0.10","strip-json-comments":"^2.0.1","sudo-prompt":"^8.2.0","tmp":"^0.0.29","tree-kill":"^1.2.0","typescript-char":"^0.0.0","uint64be":"^1.0.1","unicode":"^10.0.0","untildify":"^3.0.2","vscode-debugadapter":"^1.28.0","vscode-debugprotocol":"^1.28.0","vscode-extension-telemetry":"^0.1.0","vscode-languageclient":"^4.4.0","vscode-languageserver":"^4.4.0","vscode-languageserver-protocol":"^3.10.3","vsls":"^0.3.967","winreg":"^1.2.4","xml2js":"^0.4.19"},"devDependencies":{"@babel/core":"^7.1.0","@babel/preset-env":"^7.1.0","@babel/preset-react":"^7.0.0","@nteract/transform-dataresource":"^4.3.5","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^3.2.3","@nteract/transforms":"^4.4.4","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/copy-webpack-plugin":"^4.4.2","@types/del":"^3.0.0","@types/diff-match-patch":"^1.0.32","@types/download":"^6.2.2","@types/enzyme":"^3.1.14","@types/enzyme-adapter-react-16":"^1.0.3","@types/event-stream":"^3.3.33","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/html-webpack-plugin":"^3.2.0","@types/iconv-lite":"^0.0.1","@types/istanbul":"^0.4.29","@types/jsdom":"^11.12.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/mocha":"^2.2.48","@types/node":"9.4.7","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-codemirror":"^1.0.2","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^4.3.0","@types/stack-trace":"0.0.29","@types/strip-json-comments":"0.0.30","@types/temp":"^0.8.32","@types/tmp":"0.0.33","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/webpack-bundle-analyzer":"^2.13.0","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","JSONStream":"^1.3.2","ansi-to-html":"^0.6.7","awesome-typescript-loader":"^5.2.1","babel-loader":"^8.0.3","babel-plugin-inline-json-import":"^0.3.1","babel-plugin-transform-runtime":"^6.23.0","babel-polyfill":"^6.26.0","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","codecov":"^3.0.0","colors":"^1.2.1","copy-webpack-plugin":"^4.6.0","cross-spawn":"^6.0.5","css-loader":"^1.0.1","decache":"^4.4.0","del":"^3.0.0","download":"^7.0.0","enzyme":"^3.7.0","enzyme-adapter-react-16":"^1.6.0","event-stream":"3.3.4","file-loader":"^2.0.0","flat":"^4.0.0","gulp":"^4.0.0","gulp-azure-storage":"^0.9.0","gulp-debounced-watch":"^1.0.4","gulp-filter":"^5.1.0","gulp-inline-source":"^3.2.0","gulp-json-editor":"^2.2.2","gulp-rename":"^1.4.0","gulp-sourcemaps":"^2.6.4","gulp-typescript":"^4.0.1","gulp-watch":"^5.0.0","html-webpack-plugin":"^3.2.0","husky":"^1.1.2","is-running":"^2.1.0","istanbul":"^0.4.5","jsdom":"^12.2.0","json-loader":"^0.5.7","loader-utils":"^1.1.0","mocha":"^5.0.4","mocha-junit-reporter":"^1.17.0","node-has-native-dependencies":"^1.0.2","nyc":"^13.1.0","raw-loader":"^0.5.1","react":"^16.5.2","react-codemirror":"^1.0.0","react-dev-utils":"^5.0.2","react-dom":"^16.5.2","react-json-tree":"^0.11.0","relative":"^3.0.2","remap-istanbul":"^0.10.1","retyped-diff-match-patch-tsd-ambient":"^1.0.0-0","rewiremock":"^3.13.0","shortid":"^2.2.8","style-loader":"^0.23.1","styled-jsx":"^3.1.0","svg-inline-loader":"^0.8.0","svg-inline-react":"^3.1.0","ts-loader":"^5.3.0","ts-mockito":"^2.3.1","tsconfig-paths-webpack-plugin":"^3.2.0","tslint":"^5.9.1","tslint-eslint-rules":"^5.1.0","tslint-microsoft-contrib":"^5.0.3","typed-react-markdown":"^0.1.0","typemoq":"^2.1.0","typescript":"^3.2.2","typescript-formatter":"^7.1.0","url-loader":"^1.1.1","uuid":"^3.3.2","vscode":"^1.1.30","vscode-debugadapter-testsupport":"^1.27.0","webpack":"^4.20.2","webpack-bundle-analyzer":"^3.0.3","webpack-cli":"^3.1.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^4.1.4","webpack-node-externals":"^1.7.2","yargs":"^12.0.2"},"uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.python","identifier":{"value":"ms-python.python","_lower":"ms-python.python"},"extensionLocation":{"$mid":1,"fsPath":"/home/ninja/.vscode/extensions/ms-python.python-2019.2.5558","path":"/home/ninja/.vscode/extensions/ms-python.python-2019.2.5558","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"0.22.1","publisher":"ms-vscode","preview":true,"icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.30.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"activationEvents":["onLanguage:cpp","onLanguage:c","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.BuildAndDebugActiveFile","onCommand:C_Cpp.ConfigurationEdit","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.Navigate","onCommand:C_Cpp.GoToDeclaration","onCommand:C_Cpp.PeekDeclaration","onCommand:C_Cpp.ToggleErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ShowReleaseNotes","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.PauseParsing","onCommand:C_Cpp.ResumeParsing","onCommand:C_Cpp.ShowParsingCommands","onCommand:C_Cpp.TakeSurvey","onDebug","workspaceContains:/.vscode/c_cpp_properties.json"],"main":"/home/ninja/.vscode/extensions/ms-vscode.cpptools-0.22.1/out/src/main","contributes":{"problemMatchers":[{"name":"gcc","owner":"cpptools","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":["string","null"],"default":null,"description":"The full path of the clang-format executable.","scope":"resource"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use \"{key: value, ...}\" to set specific parameters, e.g.: \"{ BasedOnStyle: LLVM, IndentWidth: 8 }\"","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use \"{key: value, ...}\" to set specific parameters, e.g.: \"{ BasedOnStyle: LLVM, IndentWidth: 8 }\"","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. Warnings about #includes that could not be located will always be reported to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"Description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":["string","null"],"default":null,"description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":["string","null"],"default":null,"description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"\"Default\" enables code formatting. \"Disabled\" disables code formatting.","scope":"resource"},"C_Cpp.navigation.length":{"type":"number","default":60,"description":"Maximum character length of the scope/navigation UI in the status bar. The UI may not appear if this value is too large.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"resource"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"resource"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked","scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","default":"${workspaceFolder}/.vscode","description":"Defines the folder path for cached precompiled headers used by IntelliSense. The default path \"${workspaceFolder}/.vscode\" will be used if a specified path is invalid.","scope":"resource"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"description":"Maximum size of the per-workspace hard drive space in megabytes for cached precompiled headers; the actual usage may fluctuate around this value. The default size is 5120 MB. Precompiled header caching is disabled when the size is 0.","scope":"resource","minimum":0},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified, or the values to insert if \"${default}\" is present in \"includePath\".","scope":"resource"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"resource"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"resource"},"C_Cpp.default.windowsSdkVersion":{"type":["string","null"],"default":null,"description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1$","scope":"resource"},"C_Cpp.default.compileCommands":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"resource"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"resource"},"C_Cpp.default.intelliSenseMode":{"type":["string","null"],"enum":["msvc-x64","gcc-x64","clang-x64"],"default":null,"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cStandard":{"type":["string","null"],"enum":["c89","c99","c11"],"default":null,"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cppStandard":{"type":["string","null"],"enum":["c++98","c++03","c++11","c++14","c++17"],"default":null,"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"resource"},"C_Cpp.default.browse.databaseFilename":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"resource"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"description":"If true, snippets are provided by the language server.","scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change configuration provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEdit","title":"Edit configurations...","category":"C/C++"},{"command":"C_Cpp.GoToDeclaration","title":"Go to Declaration","category":"C/C++"},{"command":"C_Cpp.PeekDeclaration","title":"Peek Declaration","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.Navigate","title":"Navigate...","category":"C/C++"},{"command":"C_Cpp.ToggleErrorSquiggles","title":"Toggle error squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense engine fallback on include errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle inactive region colorization","category":"C/C++"},{"command":"C_Cpp.ShowReleaseNotes","title":"Show release notes","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense database","category":"C/C++"},{"command":"C_Cpp.PauseParsing","title":"Pause parsing","category":"C/C++"},{"command":"C_Cpp.ResumeParsing","title":"Resume parsing","category":"C/C++"},{"command":"C_Cpp.ShowParsingCommands","title":"Show parsing commands","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"}],"keybindings":[{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'c'"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Arguments for the mi debugger (such as gdb) to use. When unspecified.","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}}}}}}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"./c_cpp_properties.schema.json"}],"menus":{"editor/context":[{"when":"editorLangId == c","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == cpp","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == c","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == cpp","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == c","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == cpp","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == c","command":"C_Cpp.Navigate","group":"other1_navigation@2"},{"when":"editorLangId == cpp","command":"C_Cpp.Navigate","group":"other1_navigation@2"},{"when":"editorLangId == c","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == cpp","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == c","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"},{"when":"editorLangId == c","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false},"[c]":{"editor.wordBasedSuggestions":false}}},"scripts":{"compile":"npm run vscode:prepublish","generateOptionsSchema":"gulp generateOptionsSchema","integrationTests":"gulp integrationTests","postinstall":"node ./node_modules/vscode/bin/install","pretest":"tsc -p ./","pr-check":"gulp pr-check","test":"gulp allTests","tslint":"gulp tslint","unitTests":"gulp unitTests","vscode:prepublish":"node ./src/Support/prepublish.js","watch":"tsc -watch -p ./"},"devDependencies":{"@types/mocha":"^5.2.6","@types/node":"^8.10.43","async-child-process":"^1.1.1","await-notify":"^1.0.1","child-process":"^1.0.2","extend":"3.0.2","gulp":"^4.0.0","gulp-env":"0.4.0","gulp-mocha":"5.0.0","gulp-tslint":"8.1.2","mocha":"^5.2.0","tslint":"5.8.0","tslint-microsoft-contrib":"5.0.1","tslint-no-unused-expression-chai":"0.0.3","typescript":"^2.9.2","vrsource-tslint-rules":"^5.8.3","vscode":"^1.1.30"},"dependencies":{"@types/minimatch":"^3.0.3","http-proxy-agent":"~2.1.0","https-proxy-agent":"~2.2.0","jsonc-parser":"^1.0.0","minimatch":"~3.0.4","mkdirp":"~0.5.1","tmp":"~0.0.33","vscode-cpptools":"2.1.1","vscode-debugadapter":"~1.33.0","vscode-debugprotocol":"~1.33.0","vscode-extension-telemetry":"^0.1.1","vscode-languageclient":"5.1.1","yauzl":"~2.10.0"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2084924","platforms":["linux"],"architectures":["x86_64"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (Linux / x86)","url":"https://go.microsoft.com/fwlink/?linkid=2085028","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=2084925","platforms":["darwin"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.darwin","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.darwin"]},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2085027","platforms":["win32"],"binaries":[]},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=872607","platforms":["linux"],"architectures":["x86_64"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkID=872608","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=872609","platforms":["darwin"],"binaries":["./LLVM/bin/clang-format.darwin"]},{"description":"ClangFormat (Windows)","url":"https://go.microsoft.com/fwlink/?LinkID=872610","platforms":["win32"],"binaries":[]},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[]},{"description":"Mono Runtime (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkId=2027410","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./debugAdapters/mono.linux-x86"]},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x86_64"],"binaries":["./debugAdapters/mono.linux-x86_64"]},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"]},{"description":"LLDB 3.8.0 (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"]},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2082216","platforms":["win32"],"binaries":[]}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"/home/ninja/.vscode/extensions/ms-vscode.cpptools-0.22.1","path":"/home/ninja/.vscode/extensions/ms-vscode.cpptools-0.22.1","scheme":"file"}}]}